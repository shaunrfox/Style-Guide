<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Front-end Style Guide</title>
    <description>This site is meant to help us unify our front-end code. These are the documented best-practises for front-end code structure. You can help us maintain this project by submitting your own examples of best practises you come across.
</description>
    <link>/style-guide/</link>
    <atom:link href="/style-guide/feed.xml" rel="self" type="application/rss+xml"/>
    <pubDate>Thu, 09 Jun 2016 10:06:04 -0500</pubDate>
    <lastBuildDate>Thu, 09 Jun 2016 10:06:04 -0500</lastBuildDate>
    <generator>Jekyll v3.1.2</generator>
    
      <item>
        <title>CSS Text Handling</title>
        <description>&lt;h2 id=&quot;font-family&quot;&gt;font-family&lt;/h2&gt;

&lt;h5 id=&quot;example-values-depends-on-your-project&quot;&gt;EXAMPLE VALUES: Depends on your project.&lt;/h5&gt;

&lt;p&gt;To set what font gets used, use the &lt;code class=&quot;highlighter-rouge&quot;&gt;font-family&lt;/code&gt; property. In most of our projects this is done for you in our base css.&lt;/p&gt;

&lt;p&gt;However, if you want to change what font is used, you should have numerous fallbacks like.&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-scss&quot; data-lang=&quot;scss&quot;&gt;&lt;span class=&quot;nc&quot;&gt;.my-class&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;nl&quot;&gt;font-family&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;font-family&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;Source Sans Pro&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Verdana&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Helvetica&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Arial&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;sans-serif&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;In this example Helvetica will be used if it’s installed on the users computer. If not, it’ll fall back to Arial, etc…&lt;/p&gt;

&lt;p&gt;If you want to have them download a font, you’ll want to use &lt;code class=&quot;highlighter-rouge&quot;&gt;@font-face&lt;/code&gt;. Here’s a helpful resource &lt;strong&gt;TODO PROVIDE RESOURCE&lt;/strong&gt;&lt;/p&gt;

&lt;hr /&gt;

&lt;h2 id=&quot;font-size&quot;&gt;font-size&lt;/h2&gt;

&lt;h5 id=&quot;example-values-12px-12rem-14rem-16rem&quot;&gt;EXAMPLE VALUES: &lt;code class=&quot;highlighter-rouge&quot;&gt;12px&lt;/code&gt;, &lt;code class=&quot;highlighter-rouge&quot;&gt;1.2rem&lt;/code&gt;, &lt;code class=&quot;highlighter-rouge&quot;&gt;1.4rem&lt;/code&gt;, &lt;code class=&quot;highlighter-rouge&quot;&gt;1.6rem&lt;/code&gt;&lt;/h5&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;font-size&lt;/code&gt; controls how big the words will appear.&lt;/p&gt;

&lt;p&gt;There are several units you can use, but we recommend pixels and root ems. Root ems are a percentage of the font size set on the html element.&lt;/p&gt;

&lt;p&gt;As part of our code, we have a mixin that you should use in most cases. It will take care of both rems and a pixel fallback.&lt;/p&gt;

&lt;h3 id=&quot;usage&quot;&gt;usage&lt;/h3&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-scss&quot; data-lang=&quot;scss&quot;&gt;&lt;span class=&quot;nc&quot;&gt;.my-class&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;@include&lt;/span&gt; &lt;span class=&quot;nd&quot;&gt;font-size&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;m&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;.6&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;h3 id=&quot;outputs&quot;&gt;outputs&lt;/h3&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-scss&quot; data-lang=&quot;scss&quot;&gt;&lt;span class=&quot;nc&quot;&gt;.my-class&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;nl&quot;&gt;font-size&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;16px&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;nl&quot;&gt;font-size&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;.6rem&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;hr /&gt;

&lt;h2 id=&quot;color&quot;&gt;color&lt;/h2&gt;

&lt;h5 id=&quot;example-values-off-black-ffffff-tintmid-grey-07-red-rgba255-255-255-05&quot;&gt;EXAMPLE VALUES: &lt;code class=&quot;highlighter-rouge&quot;&gt;$off-black&lt;/code&gt;, &lt;code class=&quot;highlighter-rouge&quot;&gt;#ffffff&lt;/code&gt;, &lt;code class=&quot;highlighter-rouge&quot;&gt;tint($mid-grey, 0.7)&lt;/code&gt;, &lt;code class=&quot;highlighter-rouge&quot;&gt;$red&lt;/code&gt;, &lt;code class=&quot;highlighter-rouge&quot;&gt;rgba(255, 255, 255, 0.5)&lt;/code&gt;&lt;/h5&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;color&lt;/code&gt; changes the color of the text.&lt;/p&gt;

&lt;p&gt;In our code, we have variables corresponding to color variables. &lt;a href=&quot;#scss-color-variables&quot;&gt;SCSS Color Variables&lt;/a&gt;&lt;/p&gt;

&lt;hr /&gt;

&lt;h2 id=&quot;line-height&quot;&gt;line-height&lt;/h2&gt;

&lt;h5 id=&quot;example-values-12px-30px&quot;&gt;EXAMPLE VALUES: &lt;code class=&quot;highlighter-rouge&quot;&gt;12px&lt;/code&gt;, &lt;code class=&quot;highlighter-rouge&quot;&gt;30px&lt;/code&gt;&lt;/h5&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;line-height&lt;/code&gt; sets the vertical spacing between lines of text. We mostly use it to vertically center a single line of text. If there is a chance your text might wrap, use a different method as detailed by &lt;a href=&quot;https://css-tricks.com/centering-css-complete-guide/&quot;&gt;Centering in CSS: A Complete Guide, by CSS Tricks&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;For buttons, we commonly set the line-height to the height of the button to center the text vertically within the button.&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-scss&quot; data-lang=&quot;scss&quot;&gt;&lt;span class=&quot;nc&quot;&gt;.button&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;nl&quot;&gt;height&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;30px&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;nl&quot;&gt;line-height&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;30px&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;hr /&gt;

&lt;h2 id=&quot;text-align&quot;&gt;text-align&lt;/h2&gt;

&lt;h5 id=&quot;example-values-center-left&quot;&gt;EXAMPLE VALUES: &lt;code class=&quot;highlighter-rouge&quot;&gt;center&lt;/code&gt;, &lt;code class=&quot;highlighter-rouge&quot;&gt;left&lt;/code&gt;&lt;/h5&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;text-align&lt;/code&gt; is fairly straightforward. It aligns text. &lt;code class=&quot;highlighter-rouge&quot;&gt;text-align: center;&lt;/code&gt; should mostly only be used for text that does not wrap. Center-aligned text that wraps is more difficult to read.&lt;/p&gt;

&lt;hr /&gt;

&lt;h2 id=&quot;font-weight&quot;&gt;font-weight&lt;/h2&gt;

&lt;h5 id=&quot;example-values-normal400-semibold600-bold700&quot;&gt;EXAMPLE VALUES: &lt;code class=&quot;highlighter-rouge&quot;&gt;normal&lt;/code&gt;/&lt;code class=&quot;highlighter-rouge&quot;&gt;400&lt;/code&gt;, &lt;code class=&quot;highlighter-rouge&quot;&gt;semibold&lt;/code&gt;/&lt;code class=&quot;highlighter-rouge&quot;&gt;600&lt;/code&gt;, &lt;code class=&quot;highlighter-rouge&quot;&gt;bold&lt;/code&gt;/&lt;code class=&quot;highlighter-rouge&quot;&gt;700&lt;/code&gt;&lt;/h5&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;font-weight&lt;/code&gt; tells the browser which cut of the given font you want to deliver to the browser. The numbers shown above generally correspond directly to the named weights beside them, though some font makers use different systems. These three are the most common values we use with Source Sans Pro.&lt;/p&gt;

&lt;hr /&gt;

&lt;h2 id=&quot;font-style&quot;&gt;font-style&lt;/h2&gt;

&lt;h5 id=&quot;example-values-normal-italic&quot;&gt;EXAMPLE VALUES: &lt;code class=&quot;highlighter-rouge&quot;&gt;normal&lt;/code&gt;, &lt;code class=&quot;highlighter-rouge&quot;&gt;italic&lt;/code&gt;&lt;/h5&gt;

&lt;p&gt;This attribute is not as commonly used as some, but it’s good to know how to use it. The above values are basically all we use.&lt;/p&gt;

&lt;hr /&gt;

&lt;h2 id=&quot;text-transform&quot;&gt;text-transform&lt;/h2&gt;

&lt;h5 id=&quot;example-values-normal-uppercase&quot;&gt;EXAMPLE VALUES: &lt;code class=&quot;highlighter-rouge&quot;&gt;normal&lt;/code&gt;, &lt;code class=&quot;highlighter-rouge&quot;&gt;uppercase&lt;/code&gt;&lt;/h5&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;text-transform&lt;/code&gt; will take the formatting of the given text and transform it to your defined value, most commonly to make something uppercase.&lt;/p&gt;

&lt;p&gt;Uppercase text can be difficult to read, though, so we often pair this with &lt;code class=&quot;highlighter-rouge&quot;&gt;font-weight&lt;/code&gt; and &lt;code class=&quot;highlighter-rouge&quot;&gt;letter-spacing&lt;/code&gt; to help with that, as seen below.&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-html&quot; data-lang=&quot;html&quot;&gt;&lt;span class=&quot;nt&quot;&gt;&amp;lt;div&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;class=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;name&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;Shaun Fox&lt;span class=&quot;nt&quot;&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-scss&quot; data-lang=&quot;scss&quot;&gt;&lt;span class=&quot;nc&quot;&gt;.name&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;nl&quot;&gt;text-transform&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;uppercase&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;nl&quot;&gt;font-weight&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;600&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;nl&quot;&gt;letter-spacing&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;1px&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;hr /&gt;

&lt;h2 id=&quot;letter-spacing&quot;&gt;letter-spacing&lt;/h2&gt;

&lt;h5 id=&quot;example-values-1px-1em&quot;&gt;EXAMPLE VALUES: &lt;code class=&quot;highlighter-rouge&quot;&gt;1px&lt;/code&gt;, &lt;code class=&quot;highlighter-rouge&quot;&gt;1em&lt;/code&gt;&lt;/h5&gt;

&lt;p&gt;This is typically paired with &lt;code class=&quot;highlighter-rouge&quot;&gt;text-transform&lt;/code&gt; as demonstrated above. It should only ever be used on uppercase text. If used with lowercase text, readability is sacrificed.&lt;/p&gt;

&lt;hr /&gt;

&lt;h2 id=&quot;text-decoration&quot;&gt;text-decoration&lt;/h2&gt;

&lt;h5 id=&quot;example-values-none-underline&quot;&gt;EXAMPLE VALUES: &lt;code class=&quot;highlighter-rouge&quot;&gt;none&lt;/code&gt;, &lt;code class=&quot;highlighter-rouge&quot;&gt;underline&lt;/code&gt;&lt;/h5&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;text-decoration&lt;/code&gt; is most often used to override the default browser styling of anchor tags. Frequently we’ll set the anchor to &lt;code class=&quot;highlighter-rouge&quot;&gt;text-decoration: none&lt;/code&gt;, which removes the underline, but we’ll give it other attributes that help define it as a link. For example:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-scss&quot; data-lang=&quot;scss&quot;&gt;&lt;span class=&quot;nc&quot;&gt;.link&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;nl&quot;&gt;text-decoration&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;none&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;nl&quot;&gt;color&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$blue&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;

  &lt;span class=&quot;k&quot;&gt;&amp;amp;&lt;/span&gt;&lt;span class=&quot;nd&quot;&gt;:hover&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  	&lt;span class=&quot;nl&quot;&gt;border-bottom&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;1px&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;solid&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$blue&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;
</description>
        <pubDate>Fri, 20 May 2016 00:00:00 -0500</pubDate>
        <link>/style-guide/css/2016/05/20/css-text-handling.html</link>
        <guid isPermaLink="true">/style-guide/css/2016/05/20/css-text-handling.html</guid>
        
        
        <category>CSS</category>
        
      </item>
    
      <item>
        <title>CSS Pseudo Selectors</title>
        <description>&lt;p&gt;:hover, :active, :disabled, :first-child, :last-child, :nth-child&lt;/p&gt;
</description>
        <pubDate>Fri, 20 May 2016 00:00:00 -0500</pubDate>
        <link>/style-guide/css/2016/05/20/css-pseudo-selectors.html</link>
        <guid isPermaLink="true">/style-guide/css/2016/05/20/css-pseudo-selectors.html</guid>
        
        
        <category>CSS</category>
        
      </item>
    
      <item>
        <title>CSS Pseudo Elements</title>
        <description>&lt;p&gt;:before, :after&lt;/p&gt;
</description>
        <pubDate>Fri, 20 May 2016 00:00:00 -0500</pubDate>
        <link>/style-guide/css/2016/05/20/css-pseudo-elements.html</link>
        <guid isPermaLink="true">/style-guide/css/2016/05/20/css-pseudo-elements.html</guid>
        
        
        <category>CSS</category>
        
      </item>
    
      <item>
        <title>CSS Overflow</title>
        <description>
</description>
        <pubDate>Fri, 20 May 2016 00:00:00 -0500</pubDate>
        <link>/style-guide/css/2016/05/20/css-overflow.html</link>
        <guid isPermaLink="true">/style-guide/css/2016/05/20/css-overflow.html</guid>
        
        
        <category>CSS</category>
        
      </item>
    
      <item>
        <title>CSS Opacity</title>
        <description>
</description>
        <pubDate>Fri, 20 May 2016 00:00:00 -0500</pubDate>
        <link>/style-guide/css/2016/05/20/css-opacity.html</link>
        <guid isPermaLink="true">/style-guide/css/2016/05/20/css-opacity.html</guid>
        
        
        <category>CSS</category>
        
      </item>
    
      <item>
        <title>CSS Layout</title>
        <description>&lt;p&gt;position, z-index, top, right, bottom, left, float, clear, vertical-align, transform&lt;/p&gt;

&lt;p&gt;The position property sets the location of elements on the page.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://css-tricks.com/almanac/properties/p/position/&quot;&gt;https://css-tricks.com/almanac/properties/p/position/&lt;/a&gt;&lt;/p&gt;
</description>
        <pubDate>Fri, 20 May 2016 00:00:00 -0500</pubDate>
        <link>/style-guide/css/2016/05/20/css-layout.html</link>
        <guid isPermaLink="true">/style-guide/css/2016/05/20/css-layout.html</guid>
        
        
        <category>CSS</category>
        
      </item>
    
      <item>
        <title>CSS Display</title>
        <description>&lt;h5 id=&quot;example-values-inline-block-inline-block-table-none&quot;&gt;EXAMPLE VALUES: &lt;code class=&quot;highlighter-rouge&quot;&gt;inline&lt;/code&gt;, &lt;code class=&quot;highlighter-rouge&quot;&gt;block&lt;/code&gt;, &lt;code class=&quot;highlighter-rouge&quot;&gt;inline-block&lt;/code&gt;, &lt;code class=&quot;highlighter-rouge&quot;&gt;table&lt;/code&gt;, &lt;code class=&quot;highlighter-rouge&quot;&gt;none&lt;/code&gt;&lt;/h5&gt;

&lt;blockquote&gt;
  &lt;p&gt;“Every element on a web page is a rectangular box. The display property in CSS determines just how that rectangular box behaves.” —CSS Tricks&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;a href=&quot;https://css-tricks.com/almanac/properties/d/display/&quot;&gt;https://css-tricks.com/almanac/properties/d/display/&lt;/a&gt;&lt;/p&gt;

&lt;hr /&gt;

&lt;h2 id=&quot;display-inline&quot;&gt;display: inline;&lt;/h2&gt;

&lt;p&gt;These elements are things that behave like text. They’re primarily relative to a baseline and don’t have much ability to affect the layout of other elements on the page.&lt;/p&gt;

&lt;hr /&gt;

&lt;h2 id=&quot;display-block&quot;&gt;display: block;&lt;/h2&gt;

&lt;p&gt;These elements are things like &lt;code class=&quot;highlighter-rouge&quot;&gt;&amp;lt;div&amp;gt;&lt;/code&gt; and &lt;code class=&quot;highlighter-rouge&quot;&gt;&amp;lt;section&amp;gt;&lt;/code&gt;. They will behave like rectangles and they’re the building blocks of web layouts.&lt;/p&gt;

&lt;hr /&gt;

&lt;h2 id=&quot;display-inline-block&quot;&gt;display: inline-block;&lt;/h2&gt;

&lt;p&gt;This is kind of a mix of the two above. You can set some of the same “physical” characteristics of &lt;code class=&quot;highlighter-rouge&quot;&gt;block&lt;/code&gt;, but the element is still relative to a baseline (of text, for instance).&lt;/p&gt;

&lt;hr /&gt;

&lt;h2 id=&quot;display-table&quot;&gt;display: table&lt;/h2&gt;

&lt;p&gt;This can be used to make regular block elements behave more like a table. For example, a parent element can be set to &lt;code class=&quot;highlighter-rouge&quot;&gt;display: table;&lt;/code&gt; and it will have children set to &lt;code class=&quot;highlighter-rouge&quot;&gt;display: table-row;&lt;/code&gt; and &lt;code class=&quot;highlighter-rouge&quot;&gt;display: table-cell;&lt;/code&gt;. This can be especially helpful when you need to display tabular data but also need to support a responsive environment.&lt;/p&gt;

&lt;hr /&gt;

&lt;h2 id=&quot;display-none&quot;&gt;display: none&lt;/h2&gt;

&lt;p&gt;The easiest way to hide elements on the page.&lt;/p&gt;
</description>
        <pubDate>Fri, 20 May 2016 00:00:00 -0500</pubDate>
        <link>/style-guide/css/2016/05/20/css-display.html</link>
        <guid isPermaLink="true">/style-guide/css/2016/05/20/css-display.html</guid>
        
        
        <category>CSS</category>
        
      </item>
    
      <item>
        <title>CSS Cursor</title>
        <description>
</description>
        <pubDate>Fri, 20 May 2016 00:00:00 -0500</pubDate>
        <link>/style-guide/css/2016/05/20/css-cursor.html</link>
        <guid isPermaLink="true">/style-guide/css/2016/05/20/css-cursor.html</guid>
        
        
        <category>CSS</category>
        
      </item>
    
      <item>
        <title>CSS Box-Shadow</title>
        <description>
</description>
        <pubDate>Fri, 20 May 2016 00:00:00 -0500</pubDate>
        <link>/style-guide/css/2016/05/20/css-box-shadow.html</link>
        <guid isPermaLink="true">/style-guide/css/2016/05/20/css-box-shadow.html</guid>
        
        
        <category>CSS</category>
        
      </item>
    
      <item>
        <title>CSS Box Model</title>
        <description>&lt;p&gt;The Box-model is the basis for the strucure of elements on the web. Elements are defined in space by firstly their &lt;a href=&quot;#css-display&quot;&gt;display-type&lt;/a&gt;, then their width and height, followed by other attributes such as padding, margin, and border.&lt;/p&gt;

&lt;h2 id=&quot;box-sizing&quot;&gt;box-sizing&lt;/h2&gt;

&lt;p&gt;In the original design of the box-model, padding, margin, and border units would add to the size of the div. (That’s the old way)&lt;/p&gt;

&lt;p&gt;In the new way (using &lt;code class=&quot;highlighter-rouge&quot;&gt;box-sizing: border-box;&lt;/code&gt;), padding and border push into the set dimensions of the div. This allows for much easier calculations and control of element spacing.&lt;/p&gt;

&lt;p&gt;Here’s a live Codepen example: &lt;a href=&quot;http://codepen.io/shaunrfox/pen/raojBW/&quot;&gt;http://codepen.io/shaunrfox/pen/raojBW/&lt;/a&gt;&lt;/p&gt;

&lt;hr /&gt;

&lt;h2 id=&quot;width&quot;&gt;width&lt;/h2&gt;

&lt;h5 id=&quot;example-values-100-200px-calc100---50px&quot;&gt;EXAMPLE VALUES: &lt;code class=&quot;highlighter-rouge&quot;&gt;100%&lt;/code&gt;, &lt;code class=&quot;highlighter-rouge&quot;&gt;200px&lt;/code&gt;, &lt;code class=&quot;highlighter-rouge&quot;&gt;calc(100% - 50px)&lt;/code&gt;&lt;/h5&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;width&lt;/code&gt; is very straightforward, but the most important thing to keep in mind is scalability on different screen sizes and when the browser window is resized.&lt;/p&gt;

&lt;p&gt;To accomodate the different environments that a site could be viewed in, favor setting percentage-based widths.&lt;/p&gt;

&lt;hr /&gt;

&lt;h2 id=&quot;height&quot;&gt;height&lt;/h2&gt;

&lt;h5 id=&quot;example-values-100-200px-calc100---50px-1&quot;&gt;EXAMPLE VALUES: &lt;code class=&quot;highlighter-rouge&quot;&gt;100%&lt;/code&gt;, &lt;code class=&quot;highlighter-rouge&quot;&gt;200px&lt;/code&gt;, &lt;code class=&quot;highlighter-rouge&quot;&gt;calc(100% - 50px)&lt;/code&gt;&lt;/h5&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;height&lt;/code&gt; is considered in much the same way as &lt;code class=&quot;highlighter-rouge&quot;&gt;width&lt;/code&gt;, but is not as often set as a percentage (besides 100%).&lt;/p&gt;

&lt;hr /&gt;

&lt;h2 id=&quot;padding&quot;&gt;padding&lt;/h2&gt;

&lt;h5 id=&quot;example-values-20px-1&quot;&gt;EXAMPLE VALUES: &lt;code class=&quot;highlighter-rouge&quot;&gt;20px&lt;/code&gt;, &lt;code class=&quot;highlighter-rouge&quot;&gt;1%&lt;/code&gt;&lt;/h5&gt;

&lt;p&gt;In the new box-model mode (&lt;code class=&quot;highlighter-rouge&quot;&gt;box-sizing: border-box;&lt;/code&gt;), padding will push into the element.&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;padding&lt;/code&gt; can be defined on four sides of an element, like many things: top, right, bottom, left. This can be done as a shorthand or as individual values.&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-scss&quot; data-lang=&quot;scss&quot;&gt;&lt;span class=&quot;nc&quot;&gt;.my-class&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;nl&quot;&gt;padding&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;10px&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;20px&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;30px&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;cm&quot;&gt;/* top: 10px, right: 20px, bottom: 30px, left: 0 */&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;c1&quot;&gt;// or
&lt;/span&gt;
&lt;span class=&quot;nc&quot;&gt;.my-class&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;nl&quot;&gt;padding-top&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;20px&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;nl&quot;&gt;padding-left&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;40px&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;hr /&gt;

&lt;h2 id=&quot;margin&quot;&gt;margin&lt;/h2&gt;

&lt;h5 id=&quot;example-values-20px-0-auto&quot;&gt;EXAMPLE VALUES: &lt;code class=&quot;highlighter-rouge&quot;&gt;20px&lt;/code&gt;, &lt;code class=&quot;highlighter-rouge&quot;&gt;0 auto&lt;/code&gt;&lt;/h5&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;margin&lt;/code&gt; is always outside of the dimensions of your element and set the space around the element, relative to it’s neighbors. This being the case, be especially careful not to cause layout collisions. This happens a lot when combining margin with percentage-based widths.&lt;/p&gt;

&lt;p&gt;A common trick for horizontally centering an element inside a larger parent is to set &lt;code class=&quot;highlighter-rouge&quot;&gt;margin: 0 auto;&lt;/code&gt;. The &lt;code class=&quot;highlighter-rouge&quot;&gt;0&lt;/code&gt; defines the top and bottom margin (a shorthand), and the &lt;code class=&quot;highlighter-rouge&quot;&gt;auto&lt;/code&gt; defines the right and left. It should be noted that this only works if the element also has a width set.&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-scss&quot; data-lang=&quot;scss&quot;&gt;&lt;span class=&quot;nc&quot;&gt;.parent-element&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;nl&quot;&gt;width&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;100%&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;nl&quot;&gt;height&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;100%&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;nc&quot;&gt;.child-element&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;nl&quot;&gt;width&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;400px&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;nl&quot;&gt;height&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;300px&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;nl&quot;&gt;margin&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;0&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;auto&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;hr /&gt;

&lt;h2 id=&quot;border&quot;&gt;border&lt;/h2&gt;

&lt;h5 id=&quot;example-values-1px-solid-light-grey&quot;&gt;EXAMPLE VALUES: &lt;code class=&quot;highlighter-rouge&quot;&gt;1px solid $light-grey&lt;/code&gt;&lt;/h5&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;border&lt;/code&gt; is defined similar to padding and can be treated nearly the same. It can be defined on all sides at once or as individual attributes.&lt;/p&gt;

&lt;p&gt;We most commonly use the shorthand definitions listed below, but they can also be broken out on their own. The second example is also a common way we use it, defining multiple values as shorthand, but then overriding specific ones for an interaction or emphasis.&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-scss&quot; data-lang=&quot;scss&quot;&gt;&lt;span class=&quot;nc&quot;&gt;.element&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;nl&quot;&gt;border&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;1px&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;solid&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$light-grey&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;nc&quot;&gt;.other-element&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;nl&quot;&gt;border-bottom&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;1px&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;solid&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$white&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;

  &lt;span class=&quot;k&quot;&gt;&amp;amp;&lt;/span&gt;&lt;span class=&quot;nd&quot;&gt;:hover&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;nl&quot;&gt;border-color&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$blue&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;hr /&gt;

&lt;h2 id=&quot;border-radius&quot;&gt;border-radius&lt;/h2&gt;

&lt;h5 id=&quot;example-values-4px-50&quot;&gt;EXAMPLE VALUES: &lt;code class=&quot;highlighter-rouge&quot;&gt;4px&lt;/code&gt;, &lt;code class=&quot;highlighter-rouge&quot;&gt;50%&lt;/code&gt;&lt;/h5&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;border-radius&lt;/code&gt; affects the corners of things. It can be used to give subtle rounded-corners to things like buttons, or to make element corners completely round, forming a circle, for things like avatar images.&lt;/p&gt;

&lt;p&gt;It can be defined shorthand as top-left, top-right, bottom-right, bottom-left, or as individual values.&lt;/p&gt;
</description>
        <pubDate>Fri, 20 May 2016 00:00:00 -0500</pubDate>
        <link>/style-guide/css/2016/05/20/css-box-model.html</link>
        <guid isPermaLink="true">/style-guide/css/2016/05/20/css-box-model.html</guid>
        
        
        <category>CSS</category>
        
      </item>
    
  </channel>
</rss>
